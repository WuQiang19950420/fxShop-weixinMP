<template>
	<article class="shops-pop">
		<div class="shops-pop-top">
			<img :src="productDetail.resv1">
			<div>
				<p>
					<text class = "new-price">￥<text class = "new-big-price">{{productDetail.selingprice}}</text></text>
					<text class = "old-price">￥{{productDetail.originalPrice}}</text>
				</p>
<!-- 				<small>库存 {{productDetail.count}} 件</small> -->
			</div>
		</div>
<!-- 		<section style="margin-top: 260rpx;" class="shops-pop-middle">
			<h5>颜色</h5>
			<ul>
				<li :class="{'li-active':isActive}">13.5aaa兹</li>
				<li>13.5寸超大卡拉兹</li>
				<li>13.5aa兹</li>
				<li>13.5寸超大ssssssssss卡拉兹</li>
			</ul>
		</section> -->
		<section style="margin-top: 260rpx" class="shops-pop-middle">
			<h5>型号</h5>
			<ul>
				<li v-for = "(item,idx) in goodsDetail" :key = "item.id" @click="shopsChoose(idx)" 
					:class="idx==index?'li-active':''">{{item.name}}</li>
			</ul>
		</section>
<!-- 		<section class="shops-pop-middle">
			<h5>型号</h5>
			<ul>
				<li>13.5aaa兹</li>
				<li>13.5寸超大卡拉兹</li>
				<li>13.5aa兹</li>
				<li>13.5寸超大ssssssssss卡拉兹</li>
			</ul>
		</section> -->
		<article class="fixed">
			<section class="shops-count">
				<h5>数量</h5>
				<div class="shops-count-input">
					<span class="incream" @click="incream" v-if="increamActive">
						<img src="/static/image/shop/incream.png">
					</span>
					<span class="incream" @click="incream" v-else>
						<img src="/static/image/shop/no-incream.png">
					</span>
					<input v-model="shopsCount" @focus="inputBlur" type="number">
					<span class="add" @click="add" v-if="addActive">
						<img src="/static/image/shop/add.png">
					</span>
					<span class="add" @click="add" v-else>
						<img src="/static/image/shop/no-add.png">
					</span>
				</div>
			</section>
			<div class="shops-pop-pay">
				<!-- :disabled="!isActive" :class="{'btn-active':isActive}" -->
				<button @click="pay">立即购买</button>
				<!-- disabled禁止点击 -->
			</div>
			<u-toast ref="uToast"></u-toast>
		</article>
	</article>
</template>

<script>
	export default {
		props: {
			goods: {
				type: Object,
				default () {
					return {}
				}
			},
			goodsDetail: {
				type: Array,
				default () {
					return []
				}
			}
		},
		data() {
			return {
				index: 0,
				shopsCount: 1,
				increamActive: true,
				addActive: true,
				show: false,
				productDetail:{}
			}
		},
		watch:{
			goodsDetail(newVaule){
				this.productDetail = newVaule[0]
			}
		},
		methods: {
			shopsChoose(idx) {
				this.index = idx
				this.productDetail = this.goodsDetail[idx]
				this.increamActive == true?false:true
			},
			pay() {
				if (this.shopsCount == 0) {
					this.$refs.uToast.show({
						title: '输入商品数'
					})
				} else {
					let goodsDetail = encodeURIComponent(JSON.stringify(this.productDetail))
					let goods = encodeURIComponent(JSON.stringify(this.goods))
					let userCount = parseInt(this.shopsCount)
					uni.navigateTo({
						url: `/pages/order/WriteOrder?goodsDetail=${goodsDetail}&goods=${goods}&userCount=${userCount}`
					})
				}
			},
			incream() {
				this.shopsCount--
				if (this.shopsCount <= 1) {
					this.shopsCount = 1
					this.increamActive = false
				}
			},
			add() {
				this.increamActive = true
				this.shopsCount++
			},
			inputBlur() {
				this.shopsCount = ''
			}
		}
	}
</script>

<style lang="scss" scoped>
	.shops-pop {
		padding: 20rpx;
		.shops-pop-top {
			display: flex;
			position: fixed;
			width: 100%;
			background-color: #FFFFFF;
			z-index: 1;
			left: 0;
			padding-top: 20rpx;
			margin-left:20rpx;
			img {
				width: 200rpx;
				height: 200rpx;
				border-radius: 20rpx;
			}
			div {
				display: flex;
				flex-direction: column;
				align-self: flex-end;
				margin-left: 40rpx;
				p {
					.new-price{
						color: $price-red;
						.new-big-price{
							font-size: 48rpx;
							font-style: normal;
						}
					}
					.old-price{
						color:#909399;
						margin-left: 10rpx;
						font-size: 32rpx;
						text-decoration: line-through;
					}
				}
				small {
					color: $uni-text-color-placeholder;
					margin-left: 18rpx;
				}
			}
		}
		.shops-pop-middle {
			margin-top: 40rpx;
			&:last-of-type {
				margin-bottom: 220rpx;
			}
			h5 {
				font-size: 28rpx;
			}
			ul {
				display: flex;
				flex: 1;
				flex-wrap: wrap;
				padding: 0;

				li {
					background-color: #f2f2f2;
					border-radius: 40rpx;
					padding: 10rpx 30rpx;
					margin-top: 30rpx;
					margin-left: 30rpx;
					border: 1px solid #f2f2f2;
				}
			}
		}
		.fixed {
			position: fixed;
			width: 100%;
			height: 220rpx;
			background-color: #FFFFFF;
			z-index: 1;
			bottom: 0;
			left: 0;
			.shops-count {
				h5 {
					font-size: 28rpx;
					margin-left: 20rpx;
				}
				.shops-count-input {
					display: flex;
					justify-content: flex-end;
					align-items: center;
					padding-right: 48rpx;
					width: 100%;
					.add,
					.incream {
						display: flex;

						img {
							width: 30rpx;
							height: 30rpx;
						}
					}
					.add {
						margin-left: 20rpx;
					}
					.incream {
						margin-right: 20rpx;
					}
					input {
						height: 40rpx;
						width: 60rpx;
						background-color: #F2F2F2;
						text-align: center;
						border-radius: 10rpx;
					}
				}
			}
			.shops-pop-pay {
				button {
					border-radius: 40rpx;
					width: 90%;
					margin: 20rpx auto;
					color: #FFFFFF;
					background-image: $pay-button;
				}
			}
		}
	}
	.btn-active {
		background-image: $pay-button;
	}
	.li-active {
		background-color: #fcedeb !important;
		border: 1px solid #f2270c !important;
	}
</style>
